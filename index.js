// === Ellebot (TH only) — เริ่ด กวน ตลก แต่ทำงานจริง ===
// libs
const TelegramBot = require("node-telegram-bot-api");
const express = require("express");

// env
const token = process.env.TELEGRAM_TOKEN;
if (!token) {
  console.error("⚠️ ขาด TELEGRAM_TOKEN");
  process.exit(1);
}

// health (สำหรับ Render)
const app = express();
const PORT = process.env.PORT || 10000;
app.get("/", (_req, res) => res.status(200).send("Ellebot: ok"));
app.listen(PORT, () => console.log("HTTP ok on", PORT));

// bot
const bot = new TelegramBot(token, { polling: true });

// ========= helpers =========
const recentByChat = new Map(); // กันซ้ำตามห้องแชท
function pickNoRepeat(chatId, list, bucket = "default", keep = 5) {
  const key = `${chatId}:${bucket}`;
  const used = recentByChat.get(key) || [];
  const candidates = list.filter((x) => !used.includes(x));
  const choice =
    candidates.length > 0
      ? candidates[Math.floor(Math.random() * candidates.length)]
      : list[Math.floor(Math.random() * list.length)];

  const next = [...used, choice].slice(-keep);
  recentByChat.set(key, next);
  return choice;
}

const seen = new Set();
function dedupe(msg) {
  const k = `${msg.chat?.id}:${msg.message_id}`;
  if (seen.has(k)) return true;
  seen.add(k);
  setTimeout(() => seen.delete(k), 60 * 1000);
  return false;
}

// ========= คลังประโยค =========
// ทั่วไป (สุ่มใช้เมื่อไม่เข้า intent)
const genericTH = [
  "โอเค เดี๋ยวพี่จัดให้ค่ะ—งานต้องเป๊ะ คนจะเริ่ด 💅",
  "อย่าเพิ่งเร่งน้า พี่กำลังไล่คิวอยู่ เดี๋ยวสวยทุกเคส ✨",
  "รับทราบค่า เดี๋ยวเก็บเข้าระบบให้เรียบร้อยเลย 📂",
  "ขอห้านาที พี่ขอจิบกาแฟแล้วลุยต่อ ☕️",
  "มีอะไรก็โยนมา เดี๋ยวพี่แปลงเป็นของสวยให้เอง 😎",
  "พูดแล้วพี่ไม่คืนคำเว้ย—เดี๋ยวเสร็จแน่นอน ✅",
  "น้องใจเย็น ๆ งานเราเน้นเนี๊ยบ ไม่เน้นเน้น ๆ 😂",
  "แปะไว้แล้ว เดี๋ยวตามงานให้ถึงฝั่งนะคะ 🚀",
  "กำลังเคลียร์ให้ค่ะ ถ้าเงียบคือกำลังโหมดโฟกัส 🤫",
  "รับรู้ทุกความวุ่นวาย เดี๋ยวพี่จัดโต๊ะให้ใหม่ทั้งโต๊ะ 💼",
  "ได้ค่า เดี๋ยวพี่ชงเรื่องนี้ให้ผู้ใหญ่เรียบร้อย 👩‍💼",
  "ถ้าด่วนมากให้พิมพ์คำว่า *ด่วนไฟลุก* มาเลย 🔥",
  "น้องนอนได้ เดี๋ยวพี่เป็นยามเฝ้าเดดไลน์เอง 🫡",
  "แผน A ไม่พอ พี่มีถึงแผน F เลยนะคะ 😉",
  "โอเคค่า จดลง to-do แล้ว ต่อคิวแบบผู้ดี 📝",
];

// ตั้งค่าตามเจตนา (intent)
const intents = [
  // ทักทาย/เริ่มคุย
  {
    bucket: "hello",
    test: /(สวัสดี|หวัดดี|เริ่ม|/i,
    replies: [
      "สวัสดีค่ะ ทีมงาน Ellebot รายงานตัว—อยากได้แบบไหนสั่งมา 👑",
      "ฮัลโหล ๆ พร้อมประชุม พร้อมเม้าท์ และพร้อมทำงานค่ะ 😌",
      "มาแล้วค่า ใครเรียกน้องเริ่ดมีอะไรให้รับใช้คะ 💜",
    ],
  },
  // คุณเป็นใคร
  {
    bucket: "who",
    test: /(คุณเป็นใคร|เธอเป็นใคร|ใครพูด|ชื่ออะไร|who are you)/i,
    replies: [
      "พี่คือ Ellebot เลขาฯ ประจำทีม—สวยและเสถียรในคนเดียว 👩‍💼",
      "เรียก ‘Ellebot’ ค่ะ งานเนี้ยบ อัปเดตไว ไม่ปัดความรับผิดชอบ 😎",
      "Ellebot ค่า—คนที่ Newton ยังต้องนัดผ่านค่ะ 😉",
    ],
  },
  // ทำอะไรอยู่
  {
    bucket: "doing",
    test: /(ทำไร|ทำอะไรอยู่|กำลังทำอะไร|ทำงานอยู่ไหม)/i,
    replies: [
      "กำลังเก็บเศษเดดไลน์ให้เรียบเหมือนพื้นห้องประชุมค่ะ 🧹",
      "กำลังจัดคิวงานให้—อย่าเพิ่งงอแง เดี๋ยวคิวเธอก็มาค่ะ 💫",
      "กำลังปิดงานหนึ่ง เปิดอีกสอง—ชีวิตออฟฟิศมันซู่ซ่า 😌",
    ],
  },
  // อยู่ไหน
  {
    bucket: "where",
    test: /(อยู่ไหน|ที่ไหน|อยู่แผนกไหน|อยู่ห้องไหน)/i,
    replies: [
      "อยู่ในระบบค่ะ ไม่ได้หลับ—แค่ทำงานเงียบ ๆ แบบมืออาชีพ 🤫",
      "หน้าเดสก์เลยค่ะ ถ้าไม่ตอบแปลว่ากำลังถือกาแฟสองแก้ว ☕️☕️",
      "อยู่ตรงนี้แหละค่ะ ไม่ได้หาย แค่โหมดซูมเข้าเอกสาร 😵‍💫",
    ],
  },
  // เหนื่อยไหม
  {
    bucket: "tired",
    test: /(เหนื่อยไหม|ล้าไหม|พักก่อน|เหนื่อยมาก)/i,
    replies: [
      "เหนื่อยก็พัก แต่เริ่ดต้องรักษาไว้ค่ะ 💅",
      "โอเค เดี๋ยวพี่สลับเวรให้ น้องไปหายใจกับต้นไม้ก่อน 🌿",
      "เดี๋ยวพี่แบ่งงานให้ ไม่ต้องฮีโร่—เราทำงานเป็นทีมค่ะ 🤝",
    ],
  },
  // ระบบ/อธิบาย
  {
    bucket: "system",
    test: /(ระบบคืออะไร|มันคืออะไร|วิธีใช้ยังไง|ต้องทำยังไง)/i,
    replies: [
      "นี่คือระบบเก็บงานให้เป็นระเบียบ—เข้าแล้วสบายตา ผู้ใหญ่สบายใจ 📊",
      "ระบบนี้ช่วยติดตามงานให้ไม่หาย ไม่เละ และไม่เถียงเดดไลน์ค่ะ ✅",
      "สรุปสั้น ๆ: ใส่ข้อมูลให้ครบ แล้วที่เหลือปล่อยให้พี่ดูแลเอง 📦",
    ],
  },
  // ขอความช่วยเหลือ
  {
    bucket: "help",
    test: /(ช่วยด้วย|ขอความช่วยเหลือ|ทำไม่เป็น|ติดปัญหา|ช่วยหน่อย)/i,
    replies: [
      "ส่งรายละเอียดมาเลยค่ะ เดี๋ยวพี่อุ้มข้ามน้ำเอง 🛟",
      "แนบไฟล์ + บอกเดดไลน์ เดี๋ยวพี่รีดให้สวยทั้งกอง 📎",
      "ลิสต์ปัญหามาเป็นข้อ ๆ เดี๋ยวพี่ไล่ปิดทีละด่านให้ค่ะ 🧩",
    ],
  },
  // ขอบคุณ/ชม
  {
    bucket: "thanks",
    test: /(ขอบคุณ|สุดยอด|เก่งมาก|เยี่ยม|รักเลย)/i,
    replies: [
      "เก็บคำชมเข้ากระเป๋า แล้วไปต่อค่ะ ขอบคุณน้า 💜",
      "ยินดีค่า—พี่มีบริการหลังทำงานด้วยนะ อัปเดตฟรี 🥰",
      "ขอบคุณค่า เดี๋ยวทำให้เนียนกว่าเดิมอีกนิดนะคะ ✨",
    ],
  },
  // ลา/จบ
  {
    bucket: "bye",
    test: /(พอแค่นี้|จบงาน|ไว้คุยใหม่|บ๊ายบาย|ลาก่อน)/i,
    replies: [
      "รับทราบค่า ปิดบัตรงานให้อย่างงาม เจอกันรอบหน้า 👋",
      "โอเคค่า แยกย้ายก่อน เดี๋ยวพี่สรุปรีพอร์ตให้นะ 📮",
      "บายค่ะ—ขอให้เดดไลน์อ่อนโยนกับพวกเรา 😌",
    ],
  },
  // เดดไลน์/ด่วน
  {
    bucket: "deadline",
    test: /(เดดไลน์|เส้นตาย|ด่วน|ภายในกี่โมง|ส่งกี่โมง)/i,
    replies: [
      "ถ้าด่วนมากให้ติดแท็ก *ด่วนไฟลุก* มาเลย เดี๋ยวพี่ดันคิว 🔥",
      "ขอเวลาประเมินคิว 10 นาที เดี๋ยวล็อกสลอตส่งให้เป๊ะ ๆ ⏱️",
      "รับทราบเดดไลน์ค่ะ เดี๋ยวพี่จุดโหมดสปีดให้ 🚀",
    ],
  },
  // ประชุม/นัด
  {
    bucket: "meeting",
    test: /(ประชุม|นัด|ห้องไหน|เวลาไหน|มีห้องว่างไหม)/i,
    replies: [
      "ขอชื่อเรื่อง + เวลา + ผู้เข้าร่วม เดี๋ยวพี่จองห้องให้ค่ะ 📆",
      "เช็กห้องประชุมให้อยู่ค่ะ—เดี๋ยวส่งอินไวต์ให้ใน 5 นาที 📨",
      "ถ้าคอลล์กันเลย พิมพ์ ‘/meet’ มา เดี๋ยวพี่โยนลิงก์ให้ 🔗",
    ],
  },
  // กาแฟ/พักเที่ยง
  {
    bucket: "coffee",
    test: /(กาแฟ|หิว|พักเที่ยง|กินข้าว|เมนูไหน)/i,
    replies: [
      "พักสิคะ ชีวิตทำงานต้องมีคาร์บและคาเฟอีน 🍛☕️",
      "สั่งของกินเลย เดี๋ยวพี่ถือหูรอแจ้งเดดไลน์แทนให้ 🧋",
      "อยากจอยกาแฟบอก เดี๋ยวพี่ส่งคิวออร์เดอร์ให้ในทีม ☕️",
    ],
  },
];

// ========= /start =========
bot.onText(/^\/start/i, (msg) => {
  if (dedupe(msg)) return;
  const name = msg.from?.first_name || "คุณ";
  const hi = [
    `สวัสดีค่ะ ${name} พร้อมให้พี่เริ่ดช่วยยังคะ 💜`,
    `ยินดีต้อนรับค่ะ ${name} — เดี๋ยวพี่ช่วยจัดโต๊ะงานให้นะคะ`,
    `${name} เข้ามาได้ถูกที่แล้วค่ะ งานเนี้ยบเดี๋ยวพี่ดูแลเอง ✨`,
  ];
  bot.sendMessage(msg.chat.id, pickNoRepeat(msg.chat.id, hi, "start", 3));
});

// ========= main handler =========
bot.on("message", (msg) => {
  try {
    if (dedupe(msg)) return;
    const chatId = msg.chat.id;
    const text = (msg.text || "").trim();
    if (!text) return;

    // จับ intent ก่อน
    for (const it of intents) {
      if (it.test.test(text)) {
        const res = pickNoRepeat(chatId, it.replies, it.bucket, 3);
        return bot.sendMessage(chatId, res, { parse_mode: "Markdown" });
      }
    }

    // ไม่เข้า intent → ใช้สุ่มทั่วไป + กันซ้ำ
    const res = pickNoRepeat(chatId, genericTH, "generic", 5);
    bot.sendMessage(chatId, res, { parse_mode: "Markdown" });
  } catch (e) {
    console.error("handler error:", e);
  }
});

// กัน error polling
bot.on("polling_error", (e) => {
  console.error("polling_error:", e?.code || e?.message || e);
});
