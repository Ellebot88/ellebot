// === ElleBot x Gemini ===
// ‡πÇ‡∏´‡∏°‡∏î‡∏î‡∏≤‡∏£‡πå‡∏Å‡πÜ ‡∏Å‡∏ß‡∏ô‡πÜ ‡πÅ‡∏ö‡∏ö Elle üñ§

const TelegramBot = require("node-telegram-bot-api");
const express = require("express");
const { GoogleGenerativeAI } = require("@google/generative-ai");

// ===== Env =====
const token = process.env.TELEGRAM_TOKEN;
const geminiKey = process.env.GEMINI_API_KEY;

if (!token) {
  console.error("‚ùå Missing TELEGRAM_TOKEN");
  process.exit(1);
}
if (!geminiKey) {
  console.error("‚ùå Missing GEMINI_API_KEY");
  process.exit(1);
}

// ===== Setup =====
const bot = new TelegramBot(token, { polling: true });
const genAI = new GoogleGenerativeAI(geminiKey);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

const app = express();
const PORT = process.env.PORT || 10000;

app.get("/", (req, res) => {
  res.send("ElleBot is alive üñ§");
});

app.listen(PORT, () => {
  console.log(`‚ö° Server running on port ${PORT}`);
});

// ===== Telegram Bot =====
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(
    msg.chat.id,
    "üåë ElleBot ‡πÇ‡∏´‡∏°‡∏î‡∏î‡∏≤‡∏£‡πå‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n‡πÅ‡∏Ñ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏∞‡πÑ‡∏£‡∏°‡∏≤ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ï‡∏≠‡∏ö‡∏Å‡∏ß‡∏ô‡πÜ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á üòè"
  );
});

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text.startsWith("/start")) return; // ‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≥

  try {
    const result = await model.generateContent(text);
    const reply = result.response.text();

    bot.sendMessage(chatId, `üñ§ ${reply}`);
  } catch (err) {
    console.error("Gemini API Error:", err);
    bot.sendMessage(chatId, "‚ùå ‡∏ö‡∏≠‡∏ó‡∏Å‡∏ß‡∏ô‡∏ï‡∏µ‡∏ô error ‡πÅ‡∏õ‡πä‡∏ö ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡∏ô‡∏∞");
  }
});


