// === ElleBot TH/VI ‚Äî resilient boot (no crash), auto webhook/polling ===
const express = require("express");
const TelegramBot = require("node-telegram-bot-api");

const TOKEN = process.env.TELEGRAM_TOKEN || "";     // ‡∏Å‡∏±‡∏ô‡∏ï‡∏≤‡∏¢: ‡πÑ‡∏°‡πà exit
const PUBLIC_URL = (process.env.PUBLIC_URL || "").replace(/\/+$/, ""); // ‡∏ï‡∏±‡∏î / ‡∏ó‡πâ‡∏≤‡∏¢
const PORT = process.env.PORT || 10000;

const app = express();
app.use(express.json());

// ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û + ‡∏ö‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
app.get("/", (_, res) => {
  const ok = !!TOKEN;
  res
    .status(ok ? 200 : 200)
    .send(
      ok
        ? `ElleBot is live üíÖüñ§ (mode=${PUBLIC_URL ? "webhook" : "polling"})`
        : "‚ùå Missing TELEGRAM_TOKEN ‚Äî ‡πÉ‡∏™‡πà ENV ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Deploy ‡πÉ‡∏´‡∏°‡πà"
    );
});

// ====== Bot Persona (TH/VI) ======
function isVI(s = "") {
  return /[ƒÉ√¢ƒë√™√¥∆°∆∞√°√†·∫£√£·∫°·∫•·∫ß·∫©·∫´·∫≠·∫Ø·∫±·∫≥·∫µ·∫∑√©√®·∫ª·∫Ω·∫π·∫ø·ªÅ·ªÉ·ªÖ·ªá√≠√¨·ªâƒ©·ªã√≥√≤·ªè√µ·ªç·ªë·ªì·ªï·ªó·ªô·ªõ·ªù·ªü·ª°·ª£√∫√π·ªß≈©·ª•·ª©·ª´·ª≠·ªØ·ª±√Ω·ª≥·ª∑·ªπ·ªµ]/i.test(
    s
  );
}
function replyTH(text) {
  if (/^‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ/.test(text)) return "‚ú® ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡πâ‡∏≤ ‡πÅ‡∏°‡πà‡∏°‡∏≤‡∏•‡∏∞ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏î üñ§";
  if (/‡∏î‡πà‡∏≤/.test(text)) return "üåö ‡πÄ‡∏≠‡∏≤‡∏î‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏î‡πà‡∏≤‡∏Å‡∏£‡∏∏‡∏ö‡∏Å‡∏£‡∏¥‡∏ö ‡∏î‡∏µ‡∏•‡πà‡∏∞‡∏•‡∏π‡∏Å? ‡πÅ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏´‡∏°‡∏î ü§≠";
  if (/‡∏ï‡∏•‡∏Å|‡∏Ç‡∏≥|‡∏Æ‡∏≤/.test(text)) return "555 ‡∏ß‡∏¥‡∏Å‡∏•‡πà‡∏ô‡∏à‡∏∞‡∏´‡∏•‡∏∏‡∏î‡∏•‡∏∞‡πÄ‡∏î‡πâ‡∏≠‡∏≠‡∏≠ üåà";
  return [
    "üñ§ ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏°‡∏±‡∏ô‡∏î‡∏≤‡∏£‡πå‡∏Å ‡πÅ‡∏ï‡πà‡∏•‡∏¥‡∏õ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏î‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ß‡πâ‡∏à‡πâ‡∏∞",
    "üíÖ ‡∏≠‡∏¢‡πà‡∏≤‡∏°‡∏≤‡∏´‡∏°‡∏¥‡πà‡∏ô ‡πÅ‡∏°‡πà‡∏™‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏ã‡πà‡∏≤‡∏™‡πå‡πÇ‡∏î‡∏¢‡∏ä‡∏≠‡∏ö‡∏ò‡∏£‡∏£‡∏°",
    "üåö ‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πá‡∏û‡∏±‡∏Å ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏±‡∏á‡∏Å‡πá‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å",
    "‚ú® ‡∏ö‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ñ‡∏µ‡∏¢‡∏á‡∏´‡∏•‡∏≤‡∏¢ ‡πÅ‡∏°‡πà‡∏ä‡∏ô‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°"
  ][Math.floor(Math.random() * 4)];
}
function replyVI(text) {
  if (/^hi|hello|ch√†o/i.test(text)) return "üíÖ Ch√†o c∆∞ng! H√¥m nay mu·ªën drama hay ti·ªÅn? üñ§";
  return [
    "üñ§ Cu·ªôc ƒë·ªùi h∆°i dark nh∆∞ng ch·ªã v·∫´n ch√≥i lo√° nha!",
    "üíã D√°m c√† kh·ªãa h·∫£? L√™n lu√¥n n√® em iu!",
    "‚ú® M·ªát th√¨ ngh·ªâ, c√≤n sang th√¨ ph·∫£i gi·ªØ.",
    "üåö T·ªânh t√°o m√† m·∫∑n m√≤i, ƒë√≥ l√† phong c√°ch c·ªßa ch·ªã."
  ][Math.floor(Math.random() * 4)];
}

// ====== Boot logic ======
let bot = null;

async function startWebhook() {
  bot = new TelegramBot(TOKEN, { polling: false });

  // endpoint ‡πÉ‡∏´‡πâ Telegram ‡∏¢‡∏¥‡∏á‡πÄ‡∏Ç‡πâ‡∏≤
  app.post(`/webhook/${TOKEN}`, (req, res) => {
    bot.processUpdate(req.body);
    res.sendStatus(200);
  });

  // ‡∏ï‡∏±‡πâ‡∏á webhook ‡∏´‡∏•‡∏±‡∏á server listen ‡∏û‡∏£‡πâ‡∏≠‡∏° retry
  const url = `${PUBLIC_URL}/webhook/${TOKEN}`;
  let delay = 3000;
  for (let i = 1; i <= 5; i++) {
    try {
      await bot.setWebHook(url);
      console.log("‚úÖ Webhook set:", url);
      return;
    } catch (e) {
      console.warn(`‚ö†Ô∏è setWebHook attempt ${i} failed:`, e?.message || e);
      await new Promise(r => setTimeout(r, delay));
      delay *= 2;
    }
  }
  console.error("‚ùå ‡∏ï‡∏±‡πâ‡∏á webhook ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡πÇ‡∏õ‡∏£‡πÄ‡∏ã‡∏™‡∏¢‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà (‡∏à‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≠‡∏ô‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ï)");
}

async function startPolling() {
  // ‡∏Å‡∏±‡∏ô 409 ‡∏ä‡∏ô: ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢ webhook ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏Å‡πà‡∏≠‡∏ô
  try {
    const fetch = (await import("node-fetch")).default;
    await fetch(`https://api.telegram.org/bot${TOKEN}/deleteWebhook`);
  } catch (_) {}
  bot = new TelegramBot(TOKEN, { polling: true });
  console.log("‚úÖ Polling mode started");
}

// ‡∏•‡∏á handler ‡πÉ‡∏´‡πâ bot (‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÇ‡∏´‡∏°‡∏î)
function attachHandlers() {
  if (!bot) return;
  bot.on("message", (msg) => {
    const text = (msg.text || "").trim();
    if (!text) return;

    let ans = isVI(text) ? replyVI(text) : replyTH(text);
    bot.sendMessage(msg.chat.id, ans);
  });

  bot.onText(/^\/start$/, (msg) => {
    bot.sendMessage(
      msg.chat.id,
      "ElleBot ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏°‡∏≤‡∏ó‡πå üíÖ\n‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏ó‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ß‡∏µ‡∏¢‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÅ‡∏°‡πà‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏à‡πâ‡∏≤ üñ§"
    );
  });

  bot.onText(/^\/ping$/, (msg) => bot.sendMessage(msg.chat.id, "‡∏¢‡∏±‡∏á‡∏™‡∏ß‡∏¢ ‡∏¢‡∏±‡∏á‡∏ã‡πà‡∏≤‡∏™‡πå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏≤‡∏¢‡∏Ñ‡πà‡∏∞ ‚ö°"));
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏° server ‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á
app.listen(PORT, async () => {
  console.log(`HTTP on ${PORT}`);
  if (!TOKEN) {
    console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ TELEGRAM_TOKEN ‚Äî ‡∏£‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡πÄ‡∏ß‡πá‡∏ö‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û");
    return;
  }
  try {
    if (PUBLIC_URL) {
      console.log("Boot in WEBHOOK mode");
      await startWebhook();
    } else {
      console.log("Boot in POLLING mode (PUBLIC_URL not set)");
      await startPolling();
    }
    attachHandlers();
  } catch (e) {
    console.error("Boot error (‡πÑ‡∏°‡πà‡∏•‡πâ‡∏°‡πÇ‡∏õ‡∏£‡πÄ‡∏ã‡∏™):", e?.message || e);
  }
});
