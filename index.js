// index.js ‚Äî ElleBot (Thai only, webhook, no-repeat replies)
import express from "express";
import fetch from "node-fetch";

const token = process.env.TELEGRAM_TOKEN;
const webhookBase = process.env.WEBHOOK_URL; // ‡πÄ‡∏ä‡πà‡∏ô https://ellebot.onrender.com
if (!token || !webhookBase) {
  console.error("‚ùå Missing TELEGRAM_TOKEN or WEBHOOK_URL");
  process.exit(1);
}

const api = (method, body) =>
  fetch(`https://api.telegram.org/bot${token}/${method}`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(body),
  }).then(r => r.json());

const app = express();
app.use(express.json());

// ---- Witty Thai replies (‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢, ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥) ----
const buckets = {
  greet: [
    "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏ô‡πÄ‡∏Å‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏• ‚ú® ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏∏‡∏¢‡∏¢‡∏±‡∏á",
    "‡∏Æ‡∏±‡∏•‡πÇ‡∏´‡∏•‡∏•~ ‡∏°‡∏≤‡∏Ñ‡πà‡∏∞ ‡∏à‡∏∞‡πÄ‡∏≠‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏´‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡πà‡∏∞",
    "‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏ß ‡πÅ‡∏≠‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ã‡∏±‡∏û‡∏û‡∏≠‡∏£‡πå‡∏ï ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ã‡∏ß‡πÄ‡∏ö‡∏≤ ‡πÜ üòå",
    "‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÉ‡∏ô‡πÉ‡∏à‚Äî‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÅ‡∏≠‡∏•‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÉ‡∏´‡πâ",
  ],
  askDoing: [
    "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏ï‡∏±‡∏ß‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏≠‡∏¢‡∏π‡πà‚Äî‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ò‡∏≠‡∏ï‡∏≠‡∏ô‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏á‡∏≤‡∏ô‡∏ô‡∏±‡πà‡∏ô‡πÅ‡∏´‡∏•‡∏∞ üòâ",
    "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏ô‡∏¥‡∏ß‡∏ï‡∏±‡πâ‡∏ô ‡πÄ‡∏≠‡πâ‡∏¢‡∏¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡πà‡∏∞!",
    "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏£‡πà‡∏≤‡∏á‡∏û‡∏•‡∏±‡∏á‚Äî‡∏ä‡∏á‡∏Å‡∏≤‡πÅ‡∏ü‡πÅ‡∏õ‡πä‡∏ö ‚òïÔ∏è",
  ],
  askWhere: [
    "‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏à‡∏≠ ‡πÉ‡∏ô‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏ò‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ üòè",
    "‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ ‡πÜ ‡∏ô‡∏µ‡πà‡πÅ‡∏´‡∏•‡∏∞ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Å‡πá‡πÇ‡∏ú‡∏•‡πà!",
    "‡∏ö‡∏ô‡∏Ñ‡∏•‡∏≤‡∏ß‡∏î‡πå‡∏Ñ‡πà‡∏∞ ‡πÅ‡∏ï‡πà‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏ò‡∏≠ üíú",
  ],
  fallback: [
    "‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö ‡πÜ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÅ‡∏≠‡∏•‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏î ‡πÜ ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô ‚úÖ",
    "‡πÇ‡∏≠‡πÄ‡∏Ñ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏à‡∏±‡∏î‡πÅ‡∏û‡πá‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢",
    "‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏ò‡∏≠‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ ‡∏ö‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÅ‡∏≠‡∏•‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏õ‡∏±‡∏á",
  ],
};

let lastByChat = new Map(); // ‡∏Å‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ã‡πâ‡∏≥‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô

function pickReply(chatId, list) {
  const last = lastByChat.get(chatId);
  // ‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥‡∏Ñ‡∏≥‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ: ‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏¥‡∏° (‡∏•‡∏≠‡∏á 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)
  let cand = list[Math.floor(Math.random() * list.length)];
  for (let i = 0; i < 5 && cand === last; i++) {
    cand = list[Math.floor(Math.random() * list.length)];
  }
  lastByChat.set(chatId, cand);
  return cand;
}

function intentThai(text) {
  const t = (text || "").trim().toLowerCase();

  if (/‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ|‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ|‡∏Æ‡∏±‡∏•‡πÇ‡∏´‡∏•|hello|hi/.test(t)) return "greet";
  if (/‡∏ó‡∏≥‡πÑ‡∏£|‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£|‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£|‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏π‡πà|‡∏ó‡∏≥‡∏´‡∏¢‡∏±‡∏á/.test(t)) return "askDoing";
  if (/‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏ô|‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô|‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô|‡πÑ‡∏´‡∏ô‡πÅ‡∏•‡πâ‡∏ß|‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πÉ‡∏î/.test(t)) return "askWhere";
  return "fallback";
}

async function reply(chatId, text) {
  await api("sendMessage", { chat_id: chatId, text });
}

// endpoint ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ö‡∏ô Render
app.get("/", (req, res) => res.send("ElleBot is alive üíú"));

// ‡∏£‡∏±‡∏ö webhook ‡∏à‡∏≤‡∏Å Telegram (‡πÉ‡∏ä‡πâ path ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö token ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÇ‡∏î‡∏ô‡∏¢‡∏¥‡∏á)
app.post(`/webhook/${token}`, async (req, res) => {
  try {
    const update = req.body;
    if (update.message && update.message.text) {
      const chatId = update.message.chat.id;
      const msg = update.message.text;
      const intent = intentThai(msg);

      const list = buckets[intent] || buckets.fallback;
      const text = pickReply(chatId, list);
      await reply(chatId, text);
    }
    res.sendStatus(200);
  } catch (e) {
    console.error("webhook error", e);
    res.sendStatus(200);
  }
});

// ‡∏ï‡∏±‡πâ‡∏á webhook ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó (‡∏•‡∏ö webhook ‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏ä‡∏ô‡∏Å‡∏±‡∏ô)
async function setupWebhook() {
  // ‡∏•‡∏ö webhook ‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ó‡∏¥‡πâ‡∏á pending updates
  await api("deleteWebhook", { drop_pending_updates: true });
  const url = `${webhookBase}/webhook/${token}`;
  const set = await api("setWebhook", { url, allowed_updates: ["message"] });
  console.log("Set webhook:", set);
}

const PORT = process.env.PORT || 10000;
app.listen(PORT, async () => {
  console.log(`HTTP ok on ${PORT}`);
  await setupWebhook();
  console.log("ElleBot webhook ready üéØ");
});
